<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="53" passed="53">
  <reporter-output>
  </reporter-output>
  <suite name="JavaBasics" duration-ms="1460" started-at="2019-06-02T10:42:07Z" finished-at="2019-06-02T10:42:09Z">
    <groups>
    </groups>
    <test name="String Operations" duration-ms="996" started-at="2019-06-02T10:42:07Z" finished-at="2019-06-02T10:42:08Z">
      <class name="com.stringOperation.Test.sumOfNumberFromString">
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.sumOfNumberFromString@51565ec2]" name="test" duration-ms="23" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A123BCGD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.sumOfNumberFromString@51565ec2]" name="test" duration-ms="3" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sdasdaw45asd5454asdsd5sadas6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[38]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- com.stringOperation.Test.sumOfNumberFromString -->
      <class name="com.stringOperation.Test.EqualsTest">
        <test-method status="PASS" signature="init()[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="init" is-config="true" duration-ms="2" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="equalsMethodTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="equalsMethodTest" duration-ms="7" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalsMethodTest -->
        <test-method status="PASS" signature="end()[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="end" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="init" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="equalsMethodTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="equalsMethodTest" duration-ms="8" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalsMethodTest -->
        <test-method status="PASS" signature="end()[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="end" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
        <test-method status="PASS" signature="equalsMethodTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="equalsMethodTest" duration-ms="4" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[pqr]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pqr]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalsMethodTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="init" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="end()[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="end" is-config="true" duration-ms="3" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
        <test-method status="PASS" signature="equalsOperatorTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="equalsOperatorTest" duration-ms="5" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalsOperatorTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="init" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="end()[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="end" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
        <test-method status="PASS" signature="equalsOperatorTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="equalsOperatorTest" duration-ms="8" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalsOperatorTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="init" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="end()[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="end" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="init" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="equalsOperatorTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="equalsOperatorTest" duration-ms="2" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[pqr]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pqr]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equalsOperatorTest -->
        <test-method status="PASS" signature="end()[pri:0, instance:com.stringOperation.Test.EqualsTest@28feb3fa]" name="end" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
      </class> <!-- com.stringOperation.Test.EqualsTest -->
      <class name="com.stringOperation.Test.IndexOfAlphabetTest">
        <test-method status="PASS" signature="IndexTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.IndexOfAlphabetTest@482f8f11]" name="IndexTest" duration-ms="59" started-at="2019-06-02T10:42:08Z" data-provider="dataProvider" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IndexTest -->
        <test-method status="PASS" signature="IndexTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.IndexOfAlphabetTest@482f8f11]" name="IndexTest" duration-ms="6" started-at="2019-06-02T10:42:08Z" data-provider="dataProvider" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Z]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[26]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IndexTest -->
        <test-method status="PASS" signature="IndexTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.IndexOfAlphabetTest@482f8f11]" name="IndexTest" duration-ms="16" started-at="2019-06-02T10:42:08Z" data-provider="dataProvider" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IndexTest -->
        <test-method status="PASS" signature="IndexTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.IndexOfAlphabetTest@482f8f11]" name="IndexTest" duration-ms="8" started-at="2019-06-02T10:42:08Z" data-provider="dataProvider" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IndexTest -->
        <test-method status="PASS" signature="IndexTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.IndexOfAlphabetTest@482f8f11]" name="IndexTest" duration-ms="6" started-at="2019-06-02T10:42:08Z" data-provider="dataProvider" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[R]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IndexTest -->
      </class> <!-- com.stringOperation.Test.IndexOfAlphabetTest -->
      <class name="com.stringOperation.Test.RemoveJunkTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="usigReplase(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="usigReplase" duration-ms="5" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[He@#$%llo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usigReplase -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="afterMethod" is-config="true" duration-ms="3" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="usigReplase(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="usigReplase" duration-ms="10" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[My name is $^%%&*^^...ABC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[My name is ABC]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usigReplase -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="usigReplase(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="usigReplase" duration-ms="9" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#$#%$^&%*%&*$%#% ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usigReplase -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="usingcharAT(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="usingcharAT" duration-ms="8" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[He@#$%llo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hello]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usingcharAT -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="usingcharAT(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="usingcharAT" duration-ms="3" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[My name is $^%%&*^^...ABC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[My name is ABC]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usingcharAT -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="usingcharAT(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="usingcharAT" duration-ms="4" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#$#%$^&%*%&*$%#% ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usingcharAT -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.stringOperation.Test.RemoveJunkTest@2a5ca609]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.stringOperation.Test.RemoveJunkTest -->
      <class name="com.stringOperation.Test.printDuplicateCountTest">
        <test-method status="PASS" signature="TestDuplicate(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.printDuplicateCountTest@675d3402]" name="TestDuplicate" duration-ms="16" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[my name is rupam]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a:2,e:1,i:1,m:3,n:1,p:1,r:1,s:1,u:1,y:1,]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestDuplicate -->
        <test-method status="PASS" signature="TestDuplicate(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.printDuplicateCountTest@675d3402]" name="TestDuplicate" duration-ms="9" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ABCabc123ABC123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1:2,2:2,3:2,A:2,B:2,C:2,a:1,b:1,c:1,]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestDuplicate -->
      </class> <!-- com.stringOperation.Test.printDuplicateCountTest -->
      <class name="com.stringOperation.Test.DuplcateCharTest">
        <test-method status="PASS" signature="initz()[pri:0, instance:com.stringOperation.Test.DuplcateCharTest@20e2cbe0]" name="initz" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initz -->
        <test-method status="PASS" signature="HashMethodDuplicate(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.DuplcateCharTest@20e2cbe0]" name="HashMethodDuplicate" duration-ms="4" started-at="2019-06-02T10:42:08Z" data-provider="dpHash" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hello]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[l]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HashMethodDuplicate -->
        <test-method status="PASS" signature="destroy()[pri:0, instance:com.stringOperation.Test.DuplcateCharTest@20e2cbe0]" name="destroy" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method status="PASS" signature="initz()[pri:0, instance:com.stringOperation.Test.DuplcateCharTest@20e2cbe0]" name="initz" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initz -->
        <test-method status="PASS" signature="HashMethodDuplicate(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.DuplcateCharTest@20e2cbe0]" name="HashMethodDuplicate" duration-ms="9" started-at="2019-06-02T10:42:08Z" data-provider="dpHash" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hey what are you doing?]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[h ae y o]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HashMethodDuplicate -->
        <test-method status="PASS" signature="destroy()[pri:0, instance:com.stringOperation.Test.DuplcateCharTest@20e2cbe0]" name="destroy" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method status="PASS" signature="initz()[pri:0, instance:com.stringOperation.Test.DuplcateCharTest@20e2cbe0]" name="initz" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initz -->
        <test-method status="PASS" signature="checkDuplicate(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.DuplcateCharTest@20e2cbe0]" name="checkDuplicate" duration-ms="5" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hello]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[l]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDuplicate -->
        <test-method status="PASS" signature="destroy()[pri:0, instance:com.stringOperation.Test.DuplcateCharTest@20e2cbe0]" name="destroy" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method status="PASS" signature="initz()[pri:0, instance:com.stringOperation.Test.DuplcateCharTest@20e2cbe0]" name="initz" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initz -->
        <test-method status="PASS" signature="checkDuplicate(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.DuplcateCharTest@20e2cbe0]" name="checkDuplicate" duration-ms="9" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hey what are you doing?]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hey ao]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDuplicate -->
        <test-method status="PASS" signature="destroy()[pri:0, instance:com.stringOperation.Test.DuplcateCharTest@20e2cbe0]" name="destroy" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
      </class> <!-- com.stringOperation.Test.DuplcateCharTest -->
      <class name="com.stringOperation.Test.ReverseStringTest">
        <test-method status="PASS" signature="test()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="test" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:07Z" finished-at="2019-06-02T10:42:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="cls()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="cls" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:07Z" finished-at="2019-06-02T10:42:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cls -->
        <test-method status="PASS" signature="objIntialise()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="objIntialise" is-config="true" duration-ms="3" started-at="2019-06-02T10:42:07Z" finished-at="2019-06-02T10:42:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objIntialise -->
        <test-method status="PASS" signature="ReverseStringbuilderTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="ReverseStringbuilderTest" duration-ms="22" started-at="2019-06-02T10:42:07Z" data-provider="TestData" finished-at="2019-06-02T10:42:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cba]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReverseStringbuilderTest -->
        <test-method status="PASS" signature="destroy()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="destroy" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:07Z" finished-at="2019-06-02T10:42:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method status="PASS" signature="objIntialise()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="objIntialise" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:07Z" finished-at="2019-06-02T10:42:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objIntialise -->
        <test-method status="PASS" signature="ReverseStringbuilderTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="ReverseStringbuilderTest" duration-ms="17" started-at="2019-06-02T10:42:07Z" data-provider="TestData" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hello world]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dlrow olleh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReverseStringbuilderTest -->
        <test-method status="PASS" signature="destroy()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="destroy" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method status="PASS" signature="objIntialise()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="objIntialise" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objIntialise -->
        <test-method status="PASS" signature="ReverseStringbuilderTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="ReverseStringbuilderTest" duration-ms="10" started-at="2019-06-02T10:42:08Z" data-provider="TestData" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hi how are you]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[uoy era woh iH]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReverseStringbuilderTest -->
        <test-method status="PASS" signature="destroy()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="destroy" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method status="PASS" signature="objIntialise()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="objIntialise" is-config="true" duration-ms="3" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objIntialise -->
        <test-method status="PASS" signature="ReverseStringbuilderTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="ReverseStringbuilderTest" duration-ms="11" started-at="2019-06-02T10:42:08Z" data-provider="TestData" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ABCD ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ DCBA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReverseStringbuilderTest -->
        <test-method status="PASS" signature="destroy()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="destroy" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method status="PASS" signature="objIntialise()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="objIntialise" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objIntialise -->
        <test-method status="PASS" signature="ReverseStringbuilderTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="ReverseStringbuilderTest" duration-ms="9" started-at="2019-06-02T10:42:08Z" data-provider="TestData" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[54321]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReverseStringbuilderTest -->
        <test-method status="PASS" signature="destroy()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="destroy" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method status="PASS" signature="objIntialise()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="objIntialise" is-config="true" duration-ms="2" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objIntialise -->
        <test-method status="PASS" signature="ReversestringTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="ReversestringTest" duration-ms="6" started-at="2019-06-02T10:42:08Z" data-provider="TestData" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cba]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReversestringTest -->
        <test-method status="PASS" signature="destroy()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="destroy" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method status="PASS" signature="objIntialise()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="objIntialise" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objIntialise -->
        <test-method status="PASS" signature="ReversestringTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="ReversestringTest" duration-ms="14" started-at="2019-06-02T10:42:08Z" data-provider="TestData" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[hello world]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dlrow olleh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReversestringTest -->
        <test-method status="PASS" signature="destroy()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="destroy" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method status="PASS" signature="objIntialise()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="objIntialise" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objIntialise -->
        <test-method status="PASS" signature="ReversestringTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="ReversestringTest" duration-ms="13" started-at="2019-06-02T10:42:08Z" data-provider="TestData" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hi how are you]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[uoy era woh iH]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReversestringTest -->
        <test-method status="PASS" signature="destroy()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="destroy" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method status="PASS" signature="objIntialise()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="objIntialise" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objIntialise -->
        <test-method status="PASS" signature="ReversestringTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="ReversestringTest" duration-ms="5" started-at="2019-06-02T10:42:08Z" data-provider="TestData" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ABCD ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ DCBA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReversestringTest -->
        <test-method status="PASS" signature="destroy()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="destroy" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method status="PASS" signature="objIntialise()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="objIntialise" is-config="true" duration-ms="2" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objIntialise -->
        <test-method status="PASS" signature="ReversestringTest(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="ReversestringTest" duration-ms="4" started-at="2019-06-02T10:42:08Z" data-provider="TestData" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[54321]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReversestringTest -->
        <test-method status="PASS" signature="destroy()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="destroy" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
      </class> <!-- com.stringOperation.Test.ReverseStringTest -->
      <class name="com.stringOperation.Test.NewTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.stringOperation.Test.NewTest@68be2bc2]" name="beforeMethod" is-config="true" duration-ms="7" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.NewTest@68be2bc2]" name="f" duration-ms="6" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.stringOperation.Test.NewTest@68be2bc2]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.stringOperation.Test.NewTest@68be2bc2]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.NewTest@68be2bc2]" name="f" duration-ms="11" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pqr]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.stringOperation.Test.NewTest@68be2bc2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.stringOperation.Test.NewTest@68be2bc2]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String)[pri:0, instance:com.stringOperation.Test.NewTest@68be2bc2]" name="f" duration-ms="19" started-at="2019-06-02T10:42:08Z" data-provider="dp" finished-at="2019-06-02T10:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hellow]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[world]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.stringOperation.Test.NewTest@68be2bc2]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:08Z" finished-at="2019-06-02T10:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.stringOperation.Test.NewTest -->
    </test> <!-- String Operations -->
    <test name="Number Operations" duration-ms="274" started-at="2019-06-02T10:42:09Z" finished-at="2019-06-02T10:42:09Z">
      <class name="com.NumberOperationTest.FibonaciTest">
        <test-method status="PASS" signature="res(java.lang.String, java.lang.String)[pri:0, instance:com.NumberOperationTest.FibonaciTest@42d80b78]" name="res" duration-ms="10" started-at="2019-06-02T10:42:09Z" data-provider="data" finished-at="2019-06-02T10:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- res -->
        <test-method status="PASS" signature="res(java.lang.String, java.lang.String)[pri:0, instance:com.NumberOperationTest.FibonaciTest@42d80b78]" name="res" duration-ms="8" started-at="2019-06-02T10:42:09Z" data-provider="data" finished-at="2019-06-02T10:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0,1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- res -->
        <test-method status="PASS" signature="res(java.lang.String, java.lang.String)[pri:0, instance:com.NumberOperationTest.FibonaciTest@42d80b78]" name="res" duration-ms="5" started-at="2019-06-02T10:42:09Z" data-provider="data" finished-at="2019-06-02T10:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0,1,1,2,3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- res -->
        <test-method status="PASS" signature="res(java.lang.String, java.lang.String)[pri:0, instance:com.NumberOperationTest.FibonaciTest@42d80b78]" name="res" duration-ms="18" started-at="2019-06-02T10:42:09Z" data-provider="data" finished-at="2019-06-02T10:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0,1,1,2,3,5,8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- res -->
      </class> <!-- com.NumberOperationTest.FibonaciTest -->
      <class name="com.NumberOperationTest.ReverseIntegerTest">
        <test-method status="PASS" signature="init()[pri:0, instance:com.NumberOperationTest.ReverseIntegerTest@66a3ffec]" name="init" is-config="true" duration-ms="2" started-at="2019-06-02T10:42:09Z" finished-at="2019-06-02T10:42:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="ReverseTest(java.lang.String, java.lang.String)[pri:0, instance:com.NumberOperationTest.ReverseIntegerTest@66a3ffec]" name="ReverseTest" duration-ms="3" started-at="2019-06-02T10:42:09Z" data-provider="dp" finished-at="2019-06-02T10:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[321]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReverseTest -->
        <test-method status="PASS" signature="dest()[pri:0, instance:com.NumberOperationTest.ReverseIntegerTest@66a3ffec]" name="dest" is-config="true" duration-ms="1" started-at="2019-06-02T10:42:09Z" finished-at="2019-06-02T10:42:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dest -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.NumberOperationTest.ReverseIntegerTest@66a3ffec]" name="init" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:09Z" finished-at="2019-06-02T10:42:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="ReverseTest(java.lang.String, java.lang.String)[pri:0, instance:com.NumberOperationTest.ReverseIntegerTest@66a3ffec]" name="ReverseTest" duration-ms="6" started-at="2019-06-02T10:42:09Z" data-provider="dp" finished-at="2019-06-02T10:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[75315987]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[78951357]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReverseTest -->
        <test-method status="PASS" signature="dest()[pri:0, instance:com.NumberOperationTest.ReverseIntegerTest@66a3ffec]" name="dest" is-config="true" duration-ms="0" started-at="2019-06-02T10:42:09Z" finished-at="2019-06-02T10:42:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dest -->
      </class> <!-- com.NumberOperationTest.ReverseIntegerTest -->
      <class name="com.NumberOperationTest.PrimeNumberTest">
        <test-method status="PASS" signature="PrimeTest(java.lang.String, java.lang.String)[pri:0, instance:com.NumberOperationTest.PrimeNumberTest@77caeb3e]" name="PrimeTest" duration-ms="4" started-at="2019-06-02T10:42:09Z" data-provider="data" finished-at="2019-06-02T10:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PrimeTest -->
        <test-method status="PASS" signature="PrimeTest(java.lang.String, java.lang.String)[pri:0, instance:com.NumberOperationTest.PrimeNumberTest@77caeb3e]" name="PrimeTest" duration-ms="13" started-at="2019-06-02T10:42:09Z" data-provider="data" finished-at="2019-06-02T10:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PrimeTest -->
        <test-method status="PASS" signature="PrimeTest(java.lang.String, java.lang.String)[pri:0, instance:com.NumberOperationTest.PrimeNumberTest@77caeb3e]" name="PrimeTest" duration-ms="4" started-at="2019-06-02T10:42:09Z" data-provider="data" finished-at="2019-06-02T10:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[101]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PrimeTest -->
        <test-method status="PASS" signature="PrimeTest(java.lang.String, java.lang.String)[pri:0, instance:com.NumberOperationTest.PrimeNumberTest@77caeb3e]" name="PrimeTest" duration-ms="2" started-at="2019-06-02T10:42:09Z" data-provider="data" finished-at="2019-06-02T10:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PrimeTest -->
        <test-method status="PASS" signature="PrimeTest(java.lang.String, java.lang.String)[pri:0, instance:com.NumberOperationTest.PrimeNumberTest@77caeb3e]" name="PrimeTest" duration-ms="2" started-at="2019-06-02T10:42:09Z" data-provider="data" finished-at="2019-06-02T10:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[88]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PrimeTest -->
        <test-method status="PASS" signature="PrimeTest(java.lang.String, java.lang.String)[pri:0, instance:com.NumberOperationTest.PrimeNumberTest@77caeb3e]" name="PrimeTest" duration-ms="3" started-at="2019-06-02T10:42:09Z" data-provider="data" finished-at="2019-06-02T10:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PrimeTest -->
      </class> <!-- com.NumberOperationTest.PrimeNumberTest -->
      <class name="com.NumberOperationTest.DivisorOfNumberTest">
        <test-method status="PASS" signature="divisorTest(java.lang.String, java.lang.String)[pri:0, instance:com.NumberOperationTest.DivisorOfNumberTest@1e88b3c]" name="divisorTest" duration-ms="6" started-at="2019-06-02T10:42:09Z" data-provider="dataprovider" finished-at="2019-06-02T10:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1,2,5,10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisorTest -->
        <test-method status="PASS" signature="divisorTest(java.lang.String, java.lang.String)[pri:0, instance:com.NumberOperationTest.DivisorOfNumberTest@1e88b3c]" name="divisorTest" duration-ms="3" started-at="2019-06-02T10:42:09Z" data-provider="dataprovider" finished-at="2019-06-02T10:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1,2,3,4,6,12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisorTest -->
        <test-method status="PASS" signature="divisorTest(java.lang.String, java.lang.String)[pri:0, instance:com.NumberOperationTest.DivisorOfNumberTest@1e88b3c]" name="divisorTest" duration-ms="3" started-at="2019-06-02T10:42:09Z" data-provider="dataprovider" finished-at="2019-06-02T10:42:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1,3,9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisorTest -->
      </class> <!-- com.NumberOperationTest.DivisorOfNumberTest -->
      <class name="com.stringOperation.Test.ReverseStringTest">
        <test-method status="PASS" signature="suit()[pri:0, instance:com.stringOperation.Test.ReverseStringTest@2a2d45ba]" name="suit" is-config="true" duration-ms="49" started-at="2019-06-02T10:42:07Z" finished-at="2019-06-02T10:42:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suit -->
      </class> <!-- com.stringOperation.Test.ReverseStringTest -->
    </test> <!-- Number Operations -->
  </suite> <!-- JavaBasics -->
</testng-results>
